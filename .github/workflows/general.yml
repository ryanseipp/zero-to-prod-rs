name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.3
  SQLX_FEATURES: "rustls,postgres"
  DB_URL: "postgres://postgres:${{ secrets.PG_PASSWORD }}@localhost:5432/postgres" 

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
            cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      - name: Migrate database
        env:
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          SKIP_DOCKER: true
        run: |
          sudo apt-get install libpq-dev -y
          ./scripts/init_db.sh
      - name: Check sqlx-data.json is up-to-date
        env:
          DATABASE_URL: ${{ env.DB_URL }}
        run: |
          cargo sqlx prepare --check -- --bin zero-to-prod-rs
      - name: Run tests
        env:
          DATABASE_URL: ${{ env.DB_URL }}
        run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      - name: Migrate database
        env:
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          SKIP_DOCKER: true
        run: |
          sudo apt-get install libpq-dev -y
          ./scripts/init_db.sh
      - name: Linting
        env:
          DATABASE_URL: ${{ env.DB_URL }}
        run: cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Install libpq
        run: sudo apt-get update && sudo apt-get install postgresql-client -y
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
      - name: Migrate database
        env:
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          SKIP_DOCKER: true
        run: |
          sudo apt-get install libpq-dev -y
          ./scripts/init_db.sh
      - name: Generate code coverage
        env:
          DATABASE_URL: ${{ env.DB_URL }}
        run: cargo tarpaulin --verbose --workspace
